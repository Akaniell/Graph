#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int LCSLength3(vector<int>& A, vector<int>& B, vector<int>& C) {
    int p = A.size();
    int q = B.size();
    int r = C.size();
    vector<vector<vector<int>>> table(p + 1, vector<vector<int>>(q + 1, vector<int>(r + 1, 0)));

    for (int i = 1; i <= p; i++) {
        for (int j = 1; j <= q; j++) {
            for (int k = 1; k <= r; k++) {
                if (A[i - 1] == B[j - 1] && A[i - 1] == C[k - 1]) {
                    table[i][j][k] = table[i - 1][j - 1][k - 1] + 1;
                } else {
                    table[i][j][k] = max({table[i - 1][j][k], table[i][j - 1][k], table[i][j][k - 1]});
                }
            }
        }
    }

    return table[p][q][r];
}

int main() {
    int p, q, r;
    cin >> p;
    vector<int> A(p);
    for (int i = 0; i < p; i++) {
        cin >> A[i];
    }
    cin >> q;
    vector<int> B(q);
    for (int i = 0; i < q; i++) {
        cin >> B[i];
    }
    cin >> r;
    vector<int> C(r);
    for (int i = 0; i < r; i++) {
        cin >> C[i];
    }

    cout << LCSLength3(A, B, C) << endl;
    return 0;
}