#include <iostream>
#include <vector>
using namespace std;

int Knapsack(int W, vector<int>& weights) {
    int n = weights.size();
    vector<vector<int>> pack(n + 1, vector<int>(W + 1, 0));

    for (int i = 1; i <= n; i++) {
        for (int w = 1; w <= W; w++) {
            if (weights[i - 1] > w) {
                pack[i][w] = pack[i - 1][w];
            } else {
                pack[i][w] = max(pack[i - 1][w], pack[i - 1][w - weights[i - 1]] + weights[i - 1]);
            }
        }
    }

    return pack[n][W];
}

int main() {
    int W, n;
    cin >> W >> n;
    vector<int> weights(n);
    for (int i = 0; i < n; i++) {
        cin >> weights[i];
    }

    cout << Knapsack(W, weights) << endl;

    return 0;
}