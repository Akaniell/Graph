#include <iostream>
#include <vector>
using namespace std;

bool SplitArray(vector<int>& v) {
    int n = v.size();
    int sum = 0;
    for (int num : v) {
        sum += num;
    }
    if (sum % 3 != 0) {
        return false;
    }
    int V = sum / 3;

    vector<vector<vector<bool>>> split(n + 1, vector<vector<bool>>(V + 1, vector<bool>(V + 1, false)));
    split[0][0][0] = true;

    for (int i = 1; i <= n; i++) {
        for (int s1 = 0; s1 <= V; s1++) {
            for (int s2 = 0; s2 <= V; s2++) {
                split[i][s1][s2] = split[i - 1][s1][s2];
                if (s1 >= v[i - 1]) {
                    split[i][s1][s2] = split[i][s1][s2] || split[i - 1][s1 - v[i - 1]][s2];
                }
                if (s2 >= v[i - 1]) {
                    split[i][s1][s2] = split[i][s1][s2] || split[i - 1][s1][s2 - v[i - 1]];
                }
            }
        }
    }

    return split[n][V][V];
}

int main() {
    int n;
    cin >> n;
    vector<int> v(n);
    for (int i = 0; i < n; i++) {
        cin >> v[i];
    }

    if (SplitArray(v)) {
        cout << "1" << endl;
    } else {
        cout << "0" << endl;
    }

    return 0;
}