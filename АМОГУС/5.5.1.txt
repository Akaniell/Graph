//условия нет, брал из лекции
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int LCSLength(vector<int>& A, vector<int>& B) {
    int n = A.size();
    int m = B.size();
    vector<vector<int>> table(n + 1, vector<int>(m + 1, 0));

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            table[i][j] = max(table[i - 1][j], table[i][j - 1]);
            if (A[i - 1] == B[j - 1]) {
                table[i][j] = max(table[i][j], table[i - 1][j - 1] + 1);
            }
        }
    }

    return table[n][m];
}

int main() {
    int n, m;
    cin >> n;
    vector<int> A(n);
    for (int i = 0; i < n; i++) {
        cin >> A[i];
    }
    cin >> m;
    vector<int> B(m);
    for (int i = 0; i < m; i++) {
        cin >> B[i];
    }

    cout << LCSLength(A, B) << endl;
    return 0;
}