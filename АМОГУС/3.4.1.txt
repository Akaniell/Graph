#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
#include <string>

using namespace std;

class Spice
{
public:
    int price;
    int weight;
};

bool compare(Spice s1, Spice s2)
{
    double p1 = s1.price;
    double p2 = s2.price;
    double w1 = s1.weight;
    double w2 = s2.weight;
    return p1 / w1 > p2 / w2;
}

int main()
{
    double cost = 0;
    int n, buffer;
    cin >> n >> buffer;
    vector<Spice> spices;
    for (int i = 0; i < n; i++)
    {
        int price, weight;
        cin >> price >> weight;
        Spice spice = Spice();
        spice.price = price;
        spice.weight = weight;
        spices.push_back(spice);
    }
    sort(begin(spices), end(spices), compare);
    int i = 0;
    while (buffer > 0 && i < spices.size())
    {
        Spice spice = spices[i];
        double min = (buffer > spice.weight ? spice.weight : buffer);
        double p = spice.price;
        double w = spice.weight;
        double priceUnit = p / w;
        cost += priceUnit * min;
        buffer -= min;
        i++;
    }
    int x = 1;
    int costInt = round(cost);
    while (costInt > 10)
    {
        costInt = (costInt / 10);
        x++;
    }
    cout.precision(x+13);
    //cout << (round(cost*1000.0))/1000.0;
    cout << cost;
    return 0;
}